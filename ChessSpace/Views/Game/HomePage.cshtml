@{
    ViewData["Title"] = "HomePage";
    var userName = ViewData["UserName"] ?? "Guest";
    var eloRating = ViewData["EloRating"] ?? "N/A";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link rel="stylesheet" href="https://use.typekit.net/zlq0erw.css">
    <link rel="stylesheet" href="~/css/site.css?v=13" asp-append-version="true">
    <style>
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0,0,0,0.6);
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }


        .modal {
            background: #fff;
            padding: 30px;
            border-radius: 12px;
            text-align: center;
            min-width: 300px;
        }

            .modal h2 {
                margin-bottom: 20px;
            }

            .modal button {
                margin: 10px;
            }
    </style>
</head>
<body>
    <form method="post" action="@Url.Action("Desktop", "Desk")">
        <button type="submit" class="text-properties red-button px20">Close App</button>
    </form>
    <div class="container" style="flex-direction: row; justify-content: space-between; width: 90%;">
        <div style="text-align: left; display: flex; flex-direction: column;">
            <h1 class="text-properties welcomemessage">Welcome @userName</h1>
            <div class="homepagebuttons">
                <button id="playMatchBtn" class="purple-button px30 text-properties">Play a match!</button>

                <button class="purple-button px30 text-properties">Lessons</button>
                <button class="purple-button px30 text-properties">Friends</button>
                <button class="purple-button px30 text-properties">Profile</button>
                <button class="green-button px30 text-properties">About ChessSpace</button>
                <form method="post" action="@Url.Action("Logout", "LoginRegister")">
                    <input type="hidden" name="userName" value="@userName">
                    <button type="submit" class="red-button px30 text-properties">Log Out</button>
                </form>
            </div>
            <p class="text-properties px20" style="margin-top: 20px; margin-left: 20px;">Your current Chess Rating (ELO): <b>@eloRating</b></p>
        </div>

        <div class="chessboard">
            <chessboard-image></chessboard-image>
        </div>
    </div>

    <div id="modalOverlay" class="modal-overlay">
        <div class="modal">
            <h2>Choose an option</h2>
            <a href="/game/creategame"><button class="purple-button px30 text-properties">Create Game</button></a>
            <a href="/game/joingame"><button class="purple-button px30 text-properties">Join Game</button></a>
            <br />
            <button id="closeModal" class="red-button px20 text-properties">Cancel</button>
        </div>
    </div>

    <script src="~/js/chessboard.js" defer></script>
    <script>
        const playMatchBtn = document.getElementById("playMatchBtn");
        const modalOverlay = document.getElementById("modalOverlay");
        const closeModal = document.getElementById("closeModal");

        playMatchBtn.addEventListener("click", () => {
            modalOverlay.style.display = "flex";
        });

        closeModal.addEventListener("click", () => {
            modalOverlay.style.display = "none";
        });

        window.addEventListener("click", (e) => {
            if (e.target === modalOverlay) {
                modalOverlay.style.display = "none";
            }
        });
    </script>
</body>
</html>
